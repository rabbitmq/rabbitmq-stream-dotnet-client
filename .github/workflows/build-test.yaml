name: rabbitmq-stream-dotnet-client

on:
  - workflow_call

jobs:
  build-win32:
    name: build/test on windows-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          # Note: the cache path is relative to the workspace directory
          # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#using-the-cache-action
          path: ~/installers
          key: ${{ runner.os }}-v3-${{ hashFiles('.ci/windows/versions.json') }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/AppData/Local/NuGet/v4-cache
          key: ${{ runner.os }}-v3-nuget-${{ hashFiles('**/*.csproj','./Directory.Packages.props') }}
          restore-keys: |
            ${{ runner.os }}-v3-nuget-
      - name: Install and start RabbitMQ
        run: ${{ github.workspace }}\.ci\windows\gha-setup.ps1
      - name: Build (Debug)
        run: dotnet build ${{ github.workspace }}\Build.csproj
      - name: Verify
        run: dotnet format ${{ github.workspace }}\rabbitmq-stream-dotnet-client.sln --no-restore --verify-no-changes
      - name: Test
        run: dotnet test ${{ github.workspace }}\Tests\Tests.csproj --no-restore --no-build --logger "console;verbosity=detailed"
  build-ubuntu:
    name: build/test on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.x
            9.x
      - uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.local/share/NuGet/v4-cache
          key: ${{ runner.os }}-v3-nuget-${{ hashFiles('**/*.csproj','./Directory.Packages.props') }}
          restore-keys: |
            ${{ runner.os }}-v3-nuget-
      - name: Start RabbitMQ
        id: start-rabbitmq
        run: ${{ github.workspace }}/.ci/ubuntu/gha-setup.sh
      - name: Build (Debug)
        run: dotnet build ${{ github.workspace }}/Build.csproj
      - name: Verify
        run: dotnet format ${{ github.workspace }}/rabbitmq-stream-dotnet-client.sln --no-restore --verify-no-changes
      - name: Test
        run: dotnet test ${{ github.workspace }}/Tests/Tests.csproj --no-restore --no-build --logger "console;verbosity=detailed" /p:AltCover=true
      - name: Upload code coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
